PN SEQUENCE GENERATOR (C Compiler)
#include <stdio.h>

void main()
{
int t[] = {1,1,0,1};
int i, u1,x1,x2,x3,x4;
x1 = t[0];
x2 = t[1];
x3 = t[2];
x4 = t[3];
printf("\n\n");

for(i=0;i<15;i++)
{
u1 = x3^x4;
printf("%d",x4);
x4 = x3;
x3 = x2;
x2 = x1;
x1 = u1;
}
printf("\n\n");
}

â€ƒ
CONVOLUTION CODE (C Compiler)
#include <stdio.h>

int main() {
    int t[] = {1, 0, 1, 0, 0};
    int u1, u2, x1 = 0, x2 = 0, x3 = 0;

    printf("\n\n");

    for (int i = 0; i <= 4; i++) {
        x1 = t[i];
        u1 = x1 ^ x2 ^ x3;
        u2 = x1 ^ x3;

        printf("%d", u1);
        printf("%d", u2);

        x3 = x2;
        x2 = x1;
    }

    printf("\n\n");

    return 0;
}


CDMA IMPLEMENTATION (C Compiler)
#include <stdio.h>

int main()
{
    int ak[6] = {-1, 1, -1, -1, 1, 1};
    int a = 1, b = 2, k, e, as[6], bs[6], cs[6], ds[6];
    unsigned int bR[6] = {1, 1, -1, 1, -1, 1};

    for (int i = 0; i < 6; i++)
        as[i] = ak[i] * a;

    printf("as: ");
    for (int j = 0; j < 6; j++)
        printf("%d ", as[j]);
    printf("\n");

    for (int j = 0; j < 6; j++)
        bs[j] = as[j] | b;

    printf("bs: ");
    for (int j = 0; j < 6; j++)
        printf("%d ", bs[j]);
    printf("\n");

    for (k = 0; k < 6; k++)
        cs[k] = as[k] + bs[k];

    printf("cs: ");
    for (int k = 0; k < 6; k++)
        printf("%d ", cs[k]);
    printf("\n");

    for (k = 0; k < 6; k++)
        ds[k] = cs[k] * bR[k];

    printf("ds: ");
    for (int k = 0; k < 6; k++)
        printf("%d ", ds[k]);
    printf("\n");

    int sum = ds[0] + ds[1] + ds[2] + ds[3] + ds[4] + ds[5];
    printf("Sum: %d\n", sum);

    if (e <= 0)
        printf("0 is transmitted\n");
    else
        printf("1 is transmitted\n");
    return 0;
}


WALSH CODE (Octave)
clc
clear all
s = input('Enter the number of codewards you want: ');
if (s==1)
  z=[1];
elseif (s==2)
  z=[1 1;1 -1];
else
  x=[1 1; 1 -1];
  z=[];
  s=log(s)/log(2);
  for i=1:s-1
    z=[x x;x -x];
    x=z;
  end
end


C/I RATION AND OFFSET ON CLUSTER SIZE (Octave)
clc
clear all
close all
x=1;
for i=1:1:5;
  for j=0:1:5;
    if (i==1&&j==0);
      else;
      N=i^2+j^2*i*j;
      Q=sqrt(3*N);
      CI=10*log10(Q*4/6);
      table(x,1)=i;
      table(x,2)=j;
      table(x,3)=N;
      table(x,4)=Q;
      table(x,5)=CI;
      x=x+1;
    end
  end
end

t=sortrows(table,3);

[p,q]=size(t);
for i=1:1:p-11;
  if t(i,3)== t(i+1,3);
    t(i,:)=[];
  end
end

disp('       i          j           N         Q         C/I')
disp(t)


